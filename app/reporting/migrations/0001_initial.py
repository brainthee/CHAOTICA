# Generated by Django 5.0.6 on 2025-03-27 17:44

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("contenttypes", "0002_remove_content_type_name"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="FieldType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "django_field_type",
                    models.CharField(
                        help_text="Corresponding Django field type", max_length=50
                    ),
                ),
                (
                    "default_format",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("is_available", models.BooleanField(default=True)),
                ("can_filter", models.BooleanField(default=True)),
                ("can_sort", models.BooleanField(default=True)),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="RelationshipType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50)),
                ("description", models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="ReportCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True, null=True)),
            ],
            options={
                "verbose_name_plural": "Report Categories",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="DataArea",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True, null=True)),
                ("model_name", models.CharField(max_length=100)),
                (
                    "population_options",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="JSON definition of population filter options",
                    ),
                ),
                (
                    "default_sort_field",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("is_available", models.BooleanField(default=True)),
                (
                    "icon_class",
                    models.CharField(
                        blank=True,
                        help_text="CSS class for icon representation",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "content_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                    ),
                ),
            ],
            options={
                "verbose_name": "Data Area",
                "verbose_name_plural": "Data Areas",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="DataSource",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("join_field", models.CharField(max_length=100)),
                (
                    "reverse_join_field",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("display_name", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True, null=True)),
                ("is_available", models.BooleanField(default=True)),
                (
                    "from_area",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="child_sources",
                        to="reporting.dataarea",
                    ),
                ),
                (
                    "to_area",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="parent_sources",
                        to="reporting.dataarea",
                    ),
                ),
                (
                    "relationship_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="reporting.relationshiptype",
                    ),
                ),
            ],
            options={
                "verbose_name": "Data Source",
                "verbose_name_plural": "Data Sources",
                "unique_together": {("from_area", "to_area", "join_field")},
            },
        ),
        migrations.AddField(
            model_name="dataarea",
            name="related_areas",
            field=models.ManyToManyField(
                related_name="parent_areas",
                through="reporting.DataSource",
                to="reporting.dataarea",
            ),
        ),
        migrations.CreateModel(
            name="FieldPresentation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "format_string",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("css_class", models.CharField(blank=True, max_length=50, null=True)),
                ("is_available", models.BooleanField(default=True)),
                (
                    "field_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="presentations",
                        to="reporting.fieldtype",
                    ),
                ),
            ],
            options={
                "verbose_name": "Field Presentation",
                "verbose_name_plural": "Field Presentations",
                "ordering": ["field_type", "name"],
            },
        ),
        migrations.CreateModel(
            name="DataField",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "field_path",
                    models.CharField(
                        help_text="Path to the field in the model", max_length=255
                    ),
                ),
                ("display_name", models.CharField(max_length=100)),
                (
                    "group",
                    models.CharField(
                        blank=True,
                        help_text="Group name for organizing fields",
                        max_length=100,
                        null=True,
                    ),
                ),
                ("is_available", models.BooleanField(default=True)),
                (
                    "is_sensitive",
                    models.BooleanField(
                        default=False,
                        help_text="Whether this field contains sensitive information",
                    ),
                ),
                (
                    "requires_permission",
                    models.CharField(
                        blank=True,
                        help_text="Permission codename required to view this field",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "data_area",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="fields",
                        to="reporting.dataarea",
                    ),
                ),
                (
                    "default_presentation",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="reporting.fieldpresentation",
                    ),
                ),
                (
                    "field_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="reporting.fieldtype",
                    ),
                ),
            ],
            options={
                "ordering": ["group", "display_name"],
                "unique_together": {("data_area", "field_path")},
            },
        ),
        migrations.CreateModel(
            name="FilterType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "operator",
                    models.CharField(
                        help_text="Django query operator (e.g., 'exact', 'contains')",
                        max_length=50,
                    ),
                ),
                ("display_label", models.CharField(max_length=50)),
                ("requires_value", models.BooleanField(default=True)),
                ("supports_multiple_values", models.BooleanField(default=False)),
                ("is_available", models.BooleanField(default=True)),
                ("display_order", models.PositiveIntegerField(default=0)),
                (
                    "applicable_field_types",
                    models.ManyToManyField(
                        related_name="filter_types", to="reporting.fieldtype"
                    ),
                ),
            ],
            options={
                "ordering": ["display_order", "name"],
            },
        ),
        migrations.CreateModel(
            name="FilterCondition",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True, null=True)),
                ("value", models.TextField(blank=True, null=True)),
                ("is_dynamic", models.BooleanField(default=False)),
                ("display_label", models.CharField(max_length=100)),
                ("display_order", models.PositiveIntegerField(default=0)),
                (
                    "field_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="filter_conditions",
                        to="reporting.fieldtype",
                    ),
                ),
                (
                    "filter_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="reporting.filtertype",
                    ),
                ),
            ],
            options={
                "ordering": ["display_order", "name"],
            },
        ),
        migrations.CreateModel(
            name="Report",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "is_private",
                    models.BooleanField(
                        default=True,
                        help_text="Private reports are only visible to the owner",
                    ),
                ),
                (
                    "population_filter",
                    models.TextField(
                        blank=True,
                        help_text="JSON definition of the population filter",
                        null=True,
                    ),
                ),
                (
                    "presentation_type",
                    models.CharField(
                        choices=[
                            ("excel", "Excel Spreadsheet"),
                            ("pdf", "PDF Document"),
                            ("html", "Web Page (HTML)"),
                            ("csv", "CSV File"),
                            ("word", "Word Document"),
                            ("text", "Text File"),
                            ("analysis", "Analysis View"),
                        ],
                        default="excel",
                        max_length=50,
                    ),
                ),
                (
                    "presentation_options",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Specific options for the selected presentation type",
                    ),
                ),
                (
                    "allow_presentation_choice",
                    models.BooleanField(
                        default=False,
                        help_text="Allow users to select the output format at runtime",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("last_run_at", models.DateTimeField(blank=True, null=True)),
                (
                    "uuid",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                (
                    "data_area",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reports",
                        to="reporting.dataarea",
                    ),
                ),
                (
                    "favorites",
                    models.ManyToManyField(
                        blank=True,
                        related_name="favorite_reports",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_reports",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="reports",
                        to="reporting.reportcategory",
                    ),
                ),
            ],
            options={
                "ordering": ["-updated_at"],
                "permissions": (
                    (
                        "can_run_all_reports",
                        "Can run all reports regardless of ownership",
                    ),
                    ("can_share_reports", "Can make reports publicly available"),
                ),
            },
        ),
        migrations.CreateModel(
            name="ReportField",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("position", models.PositiveIntegerField(default=0)),
                (
                    "custom_label",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "display_format",
                    models.CharField(
                        blank=True,
                        help_text="Optional format string for rendering this field",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "data_field",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="report_fields",
                        to="reporting.datafield",
                    ),
                ),
                (
                    "report",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="fields",
                        to="reporting.report",
                    ),
                ),
            ],
            options={
                "ordering": ["position"],
            },
        ),
        migrations.CreateModel(
            name="ReportFilter",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("value", models.TextField(blank=True, null=True)),
                (
                    "prompt_text",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("prompt_at_runtime", models.BooleanField(default=False)),
                (
                    "operator",
                    models.CharField(
                        choices=[("and", "AND"), ("or", "OR")],
                        default="and",
                        max_length=3,
                    ),
                ),
                ("position", models.PositiveIntegerField(default=0)),
                (
                    "data_field",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="report_filters",
                        to="reporting.datafield",
                    ),
                ),
                (
                    "filter_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="reporting.filtertype",
                    ),
                ),
                (
                    "parent_filter",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="child_filters",
                        to="reporting.reportfilter",
                    ),
                ),
                (
                    "report",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="filters",
                        to="reporting.report",
                    ),
                ),
            ],
            options={
                "ordering": ["position"],
            },
        ),
        migrations.CreateModel(
            name="ReportSort",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "direction",
                    models.CharField(
                        choices=[("asc", "Ascending"), ("desc", "Descending")],
                        default="asc",
                        max_length=4,
                    ),
                ),
                ("position", models.PositiveIntegerField(default=0)),
                (
                    "data_field",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="report_sorts",
                        to="reporting.datafield",
                    ),
                ),
                (
                    "report",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sorts",
                        to="reporting.report",
                    ),
                ),
            ],
            options={
                "ordering": ["position"],
            },
        ),
    ]
