# Generated by Django 4.2.2 on 2023-11-03 17:41

import chaotica_utils.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("jobtracker", "0001_initial"),
        ("chaotica_utils", "0001_initial"),
        ("auth", "0012_alter_user_first_name_max_length"),
        ("contenttypes", "0002_remove_content_type_name"),
    ]

    operations = [
        migrations.AddField(
            model_name="leaverequest",
            name="timeslot",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="jobtracker.timeslot",
            ),
        ),
        migrations.AddField(
            model_name="leaverequest",
            name="user",
            field=models.ForeignKey(
                on_delete=models.SET(chaotica_utils.models.get_sentinel_user),
                related_name="leave_records",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AlterUniqueTogether(
            name="language",
            unique_together={("lang_code", "display_name")},
        ),
        migrations.AddField(
            model_name="holiday",
            name="country",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="chaotica_utils.holidaycountry",
            ),
        ),
        migrations.AddField(
            model_name="historicalnote",
            name="author",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="historicalnote",
            name="content_type",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="contenttypes.contenttype",
            ),
        ),
        migrations.AddField(
            model_name="historicalnote",
            name="history_user",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="acting_manager",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=models.SET(chaotica_utils.models.get_sentinel_user),
                related_name="users_acting_managed",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="groups",
            field=models.ManyToManyField(
                blank=True,
                help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                related_name="user_set",
                related_query_name="user",
                to="chaotica_utils.group",
                verbose_name="groups",
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="languages",
            field=models.ManyToManyField(
                blank=True, to="chaotica_utils.language", verbose_name="Languages"
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="manager",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=models.SET(chaotica_utils.models.get_sentinel_user),
                related_name="users_managed",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="user_permissions",
            field=models.ManyToManyField(
                blank=True,
                help_text="Specific permissions for this user.",
                related_name="user_set",
                related_query_name="user",
                to="auth.permission",
                verbose_name="user permissions",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="usercost",
            unique_together={("user", "effective_from")},
        ),
        migrations.AlterUniqueTogether(
            name="holiday",
            unique_together={("date", "country", "reason")},
        ),
    ]
